#!groovy
//  groovy Jenkinsfile
pipeline  {
    agent any;
    stages {
        stage("Automated docker image build") {
            steps {
                echo 'Creating frontend docker image ...'
                sh "docker build --no-cache -t alonaarz/jenkins . "                
            }
        }
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
    sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
    sh 'docker push alonaarz/jenkins:latest'
}
         
   }
        }
        stage("docker image push") {
            steps {
                echo " ============== pushing webserver image =================="
                sh '''
                docker push alonaarz/jenkins:latest
                '''
            }
        }
stage("docker image webserver run") {
            steps {
                echo " ============== Run webserer  =================="
                sh '''
docker stop jenkins || true
        docker rm jenkins || true
        docker run -d --name=jenkins --restart=always -p 8081:80 alonaarz/jenkins:latest
        '''        
        '''
            }
        }

    }
}
